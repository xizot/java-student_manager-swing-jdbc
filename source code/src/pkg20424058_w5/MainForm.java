/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg20424058_w5;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Frame;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form JFrame2
     */
    DBManager db;
    String imagePath = "";
    ArrayList<Student> students;
    public MainForm(DBManager db) {
        this.db = db;
        initComponents();
        loadForm();
    }
    public MainForm() {
        this.db = db;
        initComponents();
        loadForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbListStudent = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPoint = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lbPicture = new javax.swing.JLabel();
        btnChooseImage = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();
        btnImport = new javax.swing.JButton();
        cbSortById = new javax.swing.JComboBox<>();
        cbSortByPoint = new javax.swing.JComboBox<>();

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Student Management");
        setBackground(new java.awt.Color(4, 0, 154));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tbListStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Point", "Address", "Note", "Image"
            }
        ));
        tbListStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbListStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbListStudent);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setMaximumSize(new java.awt.Dimension(150, 40));
        btnAdd.setMinimumSize(new java.awt.Dimension(150, 40));
        btnAdd.setPreferredSize(new java.awt.Dimension(150, 40));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel2.add(btnAdd, gridBagConstraints);

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setMaximumSize(new java.awt.Dimension(150, 40));
        btnUpdate.setMinimumSize(new java.awt.Dimension(150, 40));
        btnUpdate.setPreferredSize(new java.awt.Dimension(150, 40));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(btnUpdate, gridBagConstraints);

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setMaximumSize(new java.awt.Dimension(300, 40));
        btnDelete.setMinimumSize(new java.awt.Dimension(150, 40));
        btnDelete.setPreferredSize(new java.awt.Dimension(150, 40));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(btnDelete, gridBagConstraints);

        btnCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setMaximumSize(new java.awt.Dimension(300, 40));
        btnCancel.setMinimumSize(new java.awt.Dimension(150, 40));
        btnCancel.setPreferredSize(new java.awt.Dimension(150, 40));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(btnCancel, gridBagConstraints);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1035, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setText("Student ID:");

        jLabel2.setText("Name:");

        txtPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPointActionPerformed(evt);
            }
        });

        jLabel3.setText("Point:");

        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        jLabel5.setText("Address:");

        txtNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoteActionPerformed(evt);
            }
        });

        jLabel6.setText("Note:");

        lbPicture.setBackground(new java.awt.Color(102, 102, 102));
        lbPicture.setForeground(new java.awt.Color(255, 0, 0));
        lbPicture.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lbPicture.setMinimumSize(new java.awt.Dimension(180, 150));
        lbPicture.setName(""); // NOI18N

        btnChooseImage.setText("Choose Image");
        btnChooseImage.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnExport.setText("Export (csv)");
        btnExport.setMaximumSize(new java.awt.Dimension(300, 40));
        btnExport.setMinimumSize(new java.awt.Dimension(150, 40));
        btnExport.setPreferredSize(new java.awt.Dimension(150, 40));
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        btnImport.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnImport.setText("Import (csv)");
        btnImport.setMaximumSize(new java.awt.Dimension(300, 40));
        btnImport.setMinimumSize(new java.awt.Dimension(150, 40));
        btnImport.setPreferredSize(new java.awt.Dimension(150, 40));
        btnImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportActionPerformed(evt);
            }
        });

        cbSortById.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbSortById.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort: Default", "Sort ID: Ascending", "Sort ID: Descending" }));
        cbSortById.setToolTipText("");
        cbSortById.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSortByIdItemStateChanged(evt);
            }
        });
        cbSortById.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbSortByIdPropertyChange(evt);
            }
        });

        cbSortByPoint.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbSortByPoint.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sort: Default", "Sort Point: Ascending", "Sort Point: Descending" }));
        cbSortByPoint.setToolTipText("");
        cbSortByPoint.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbSortByPointItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(195, 195, 195)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(50, 50, 50)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnChooseImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(cbSortById, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(170, 170, 170)
                                .addComponent(cbSortByPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(lbPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChooseImage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbSortById, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbSortByPoint, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnImport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoteActionPerformed

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        // TODO add your handling code here:
       JFileChooser fileChooser = new JFileChooser();
       FileFilter filter = new FileNameExtensionFilter("JPEG file", new String[] {"jpg", "jpeg", "png"});
        fileChooser.setFileFilter(filter);
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            imagePath = selectedFile.getAbsolutePath();
            lbPicture.setIcon(createIcon(imagePath));
            lbPicture.setText(null);

        }
    }//GEN-LAST:event_btnChooseImageActionPerformed
    public ImageIcon createIcon(String filePath){
            ImageIcon icon = new ImageIcon(filePath);
            Image img = icon.getImage(); 
            Image newimg = img.getScaledInstance(lbPicture.getWidth(), lbPicture.getHeight(),  java.awt.Image.SCALE_SMOOTH);
            icon = new ImageIcon(newimg);
            lbPicture.setIcon(icon);
            lbPicture.setText(null);
            lbPicture.setIcon(icon);
            return icon;
    }
    private void txtPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPointActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPointActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            
            String id = txtID.getText();
            
            if(db.delete(id)){
                JOptionPane.showMessageDialog(new Frame(), "Delete student id ["+id+"] successfully");
                
                LoadData();
                resetStatus();
            }
            else{
                JOptionPane.showMessageDialog(new Frame(), "Delete failed", "Dialog", JOptionPane.ERROR_MESSAGE); 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    public void UpdateStatus(){
        btnAdd.setEnabled(false);
        txtID.setEnabled(false);
        btnCancel.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        
        Color colorDisabled = new Color(221,221,221);
        Color mainColor = new Color(21,14,86);
        
        
        btnAdd.setBackground(colorDisabled);
        btnAdd.setForeground(Color.BLACK);
        
        
        
        btnCancel.setBackground(mainColor);
        btnCancel.setForeground(Color.WHITE);
        
        btnUpdate.setBackground(mainColor);
        btnUpdate.setForeground(Color.WHITE);
        
        btnDelete.setBackground(mainColor);
        btnDelete.setForeground(Color.WHITE);
        
    }
    public void resetStatus(){
        
        txtID.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtPoint.setText("");
        txtNote.setText("");
        lbPicture.setIcon(null);
        imagePath ="";
        
        btnAdd.setEnabled(true);
        txtID.setEnabled(true);
        btnCancel.setEnabled(false);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        
        Color colorDisabled = new Color(221,221,221);
        Color mainColor = new Color(21,14,86);
        
        
        btnAdd.setBackground(mainColor);
        btnAdd.setForeground(Color.WHITE);
        
        btnCancel.setBackground(colorDisabled);
        btnCancel.setForeground(Color.BLACK);
        
        btnUpdate.setBackground(colorDisabled);
        btnUpdate.setForeground(Color.BLACK);
        
        btnDelete.setBackground(colorDisabled);
        btnDelete.setForeground(Color.BLACK);
        
    }
    private void tbListStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbListStudentMouseClicked
        // TODO add your handling code here:
        int selRow = tbListStudent.getSelectedRow();
        txtID.setText( tbListStudent.getValueAt(selRow, 0).toString());
        txtName.setText( tbListStudent.getValueAt(selRow, 1).toString());
        txtPoint.setText( tbListStudent.getValueAt(selRow, 2).toString());
        txtAddress.setText( tbListStudent.getValueAt(selRow, 3).toString());
        txtNote.setText( tbListStudent.getValueAt(selRow, 4).toString());
        imagePath = tbListStudent.getValueAt(selRow, 5).toString();
        lbPicture.setIcon(createIcon(imagePath));
        UpdateStatus();
    }//GEN-LAST:event_tbListStudentMouseClicked

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        resetStatus();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            // TODO add your handling code here:
            
            String id = txtID.getText();
            String name = txtName.getText();
            double point = Double.parseDouble(txtPoint.getText());
            String address = txtAddress.getText();
            String note = txtNote.getText();
            
            if(!checkInputEmpty()){
                JOptionPane.showMessageDialog(new Frame(), "Please fill all input & choose image", "Missing value", JOptionPane.ERROR_MESSAGE); 
                return; 
            }
            
            if(db.update(id, name, point, address, note, imagePath)){
                JOptionPane.showMessageDialog(new Frame(), "Update successfully");
                LoadData();
                resetStatus();
            }
            else{
                JOptionPane.showMessageDialog(new Frame(), "Update failed", "Dialog", JOptionPane.ERROR_MESSAGE); 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed
    public boolean checkInputEmpty(){
        String id = txtID.getText();
        String name = txtName.getText();
        String strPoint = txtPoint.getText();
        double point = Double.parseDouble(strPoint);
        String address = txtAddress.getText();
        String note = txtNote.getText();
        if(id.length() > 0 && name.length() > 0 && strPoint.length() > 0 && address.length() > 0 && note.length() > 0 && imagePath.length() >0 ){
            return true;
        }
        if(point > 10 || point < 0){
            return false;
        }
        return false;
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
         try {
            // TODO add your handling code here:
            
            String id = txtID.getText();
            String name = txtName.getText();
            double point = Double.parseDouble(txtPoint.getText());
            String address = txtAddress.getText();
            String note = txtNote.getText();
            if(!checkInputEmpty()){
                JOptionPane.showMessageDialog(new Frame(), "Please fill all input, choose [image] and [point] must be between 0 to 10", "Missing value", JOptionPane.ERROR_MESSAGE); 
                return; 
           }
            
            if(db.addNew(id, name, point, address, note, imagePath)){
                JOptionPane.showMessageDialog(new Frame(), "Add student successfully");
                LoadData();
                resetStatus();
            }
            else{
                JOptionPane.showMessageDialog(new Frame(), "Add student failed", "Dialog", JOptionPane.ERROR_MESSAGE); 
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("CSV file", new String[] {"csv"});
        fileChooser.setFileFilter(filter);
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            FileWriter fw = null;
            try {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();
                File file = new File(filePath);
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                String data = "D,Name,Point,Address,Note,Image\n";
                for (Student student : students) {
                    data+= String.format("%s,%s,%s,%s,%s,%s\n", student.id, student.name, student.point, student.address, student.note, student.image);
                }
                bw.write(data);
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(new Frame(),"Export successfully");

            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    fw.close();
                } catch (IOException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
            
        }
    }//GEN-LAST:event_btnExportActionPerformed
    
    public boolean isExist(String Id){
        for (Student student : students) {
            if(student.id.equals(Id))
                return true;
        }
        return false;
    }
    
    private void btnImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fileChooser = new JFileChooser();
        FileFilter filter = new FileNameExtensionFilter("CSV file", new String[] {"csv"});
        fileChooser.setFileFilter(filter);
        fileChooser.addChoosableFileFilter(filter);
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            FileReader fr = null;
            try {
                File selectedFile = fileChooser.getSelectedFile();
                String filePath = selectedFile.getAbsolutePath();
                File file = new File(filePath);
                fr = new FileReader(file);
                BufferedReader br = new BufferedReader(fr);
                int studentAdded = 0;
                int studentNotAdd = 0;
                String line = br.readLine();
                while ((line = br.readLine()) != null) { 
                    String[] studentInfo = line.split(",");
                    if(!isExist(studentInfo[0])){
                        db.addNew(studentInfo[0], studentInfo[1], Double.parseDouble(studentInfo[2]), studentInfo[3], studentInfo[4], studentInfo[5]);
                        studentAdded ++;
                    }
                    else{
                        studentNotAdd ++;
                    }
                }
                
                br.close();
                fr.close();
                JOptionPane.showMessageDialog(new Frame(),"Import successfully. \nStudents are added: " +studentAdded + "\nStudents aren't added  : " + studentNotAdd);
                LoadData();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                 JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(new Frame(), ex.getMessage(), "Dialog", JOptionPane.ERROR_MESSAGE);
                }
            }
                
           
            
        }
        
    }//GEN-LAST:event_btnImportActionPerformed

    private void cbSortByIdPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbSortByIdPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_cbSortByIdPropertyChange

    private void cbSortByIdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSortByIdItemStateChanged
        // TODO add your handling code here:
         
         LoadData();

    }//GEN-LAST:event_cbSortByIdItemStateChanged

    private void cbSortByPointItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbSortByPointItemStateChanged
        // TODO add your handling code here:
        LoadData();
    }//GEN-LAST:event_cbSortByPointItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    public  void loadForm(){
        
        Color mainColor = new Color(21,14,86);
        Color colorDisabled = new Color(221,221,221);

        
        this.getContentPane().setBackground(mainColor);
        jPanel1.setBackground(Color.WHITE);
        btnAdd.setBackground(mainColor);
        btnAdd.setForeground(Color.WHITE);
        
        btnChooseImage.setBackground(mainColor);
        btnChooseImage.setForeground(Color.WHITE);
        
        btnImport.setBackground(mainColor);
        btnImport.setForeground(Color.WHITE);
        
        btnExport.setBackground(mainColor);
        btnExport.setForeground(Color.WHITE);
        
        btnCancel.setBackground(colorDisabled);
        btnCancel.setForeground(Color.BLACK);
        
        btnUpdate.setBackground(colorDisabled);
        btnUpdate.setForeground(Color.BLACK);
        
        btnDelete.setBackground(colorDisabled);
        btnDelete.setForeground(Color.BLACK);
        
        
        if(db.checkConnection()){
            System.out.println("connect successfully");
        }
        else{
            System.out.println("connect failed");
        }
        tbListStudent.setDefaultEditor(Object.class, null);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        btnCancel.setEnabled(false);
     
        LoadData();
    }
    
    public void LoadData(){
       
        try {
            
            int idSort = cbSortById.getSelectedIndex() ;
            int pointSort = cbSortByPoint.getSelectedIndex();
            
            students = db.getStudent(idSort, pointSort);
            String col[] = {"ID","Name","Point", "Address", "Note", "Image"};
            DefaultTableModel tableModel = new DefaultTableModel(col, 0);
            
            for (Student student : students) {
                Object[] data = {student.id,student.name, student.point, student.address, student.note, student.image};
                tableModel.addRow(data);
            }
            tbListStudent.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnImport;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbSortById;
    private javax.swing.JComboBox<String> cbSortByPoint;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbPicture;
    private javax.swing.JTable tbListStudent;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtPoint;
    // End of variables declaration//GEN-END:variables
}
